{"version":3,"file":"static/js/284.81721a50.chunk.js","mappings":"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","sources":["component/orderitem/cancel.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport DataContext from \"../usecontext/DataContext\";\r\nimport { FaArrowAltCircleLeft,FaArrowAltCircleRight } from \"react-icons/fa\";\r\nimport { MdEdit ,MdDelete ,MdOutlineSystemSecurityUpdate } from \"react-icons/md\";\r\n\r\nexport default  function Cancel (params) {\r\n\r\n\r\n    const {setexceldata,setsingleorderid,userrole} = useContext(DataContext);\r\n     const apiKey = \"https://backenddata77720.onrender.com\"\r\n \r\n     const { updateOrderStatus} = useContext(DataContext);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalOrder, settotalOrder] = useState(\"\");\r\n   const [hasMore, setHasMore] = useState(true); // To track if there are more items to load\r\n\r\n   useEffect(() => {\r\n    fetchproduct(currentPage);\r\n   }, [ ]);\r\n  \r\n   let [productdata, setproductdata] = useState({ refundCondition:\"\",  billno:\"\",refunddate:\"\", billdate:\"\", LRNO:\"\" ,shippingcharges:\"\" ,Trackingid:\"\" ,Courier:\"\",   Deliverybydate:\"\"})\r\n   let update =async(status,id)=>{\r\n    await updateOrderStatus(status,id,productdata)\r\n    fetchproduct(currentPage)\r\n   }  \r\n\r\n \r\n  const Previous = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage((prevPage) => {\r\n        const newPage = prevPage - 1;\r\n\r\n        //console.log(newPage)\r\n        fetchproduct(newPage);\r\n        return newPage;\r\n      });\r\n    }\r\n  };\r\n\r\n  const Next = () => {\r\n    //console.log(hasMore)\r\n   if( Math.ceil(totalOrder/10)){}\r\n    if (hasMore) {\r\n      setCurrentPage((prevPage) => {\r\n        const newPage = prevPage + 1;\r\n        //console.log(newPage)\r\n        fetchproduct(newPage);\r\n        return newPage;\r\n      });\r\n    }\r\n  };\r\n  const [openItemId, setOpenItemId] = useState(null);\r\n\r\n  const toggleOpen = (id) => {\r\n    setOpenItemId((prevId) => (prevId === id ? null : id));\r\n  };\r\n\r\n  const numclick = (number) => {\r\n     \r\n    if (hasMore) {\r\n      setCurrentPage((prevPage) => {\r\n        const newPage = number\r\n        //console.log(newPage)\r\n        fetchproduct(newPage);\r\n        return newPage;\r\n      });\r\n    }\r\n  };\r\n\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n  const [id, setid] = useState('');\r\n\r\n \r\n  let changestatus =(status,iddata)=>{\r\n    setSelectedStatus(status)\r\n    setid(iddata)\r\n     \r\n    }\r\n\r\n    const fetchproduct = async (page) => {\r\n        //console.log(page, \"this is my fetching page\");\r\n      let token = localStorage.getItem('token')\r\n        try {\r\n          const response = await axios.get(`${apiKey}/api/order/fetchallordersforadmin/Cancel/${page}`,{method: 'GET',\r\n            headers:{\r\n                 \r\n                'authtoken': token\r\n            },\r\n           });\r\n          settotalOrder(response.data.totalOrder)\r\n    \r\n          if (response.data.orders.length === 0) {\r\n            setHasMore(false); // No more data to load\r\n            setData(response.data);\r\n    \r\n           } else {\r\n            // setData(prevData => ({\r\n            //   ...prevData,\r\n            //   orders: [...prevData.orders, ...response.data.orders]\r\n            // }));\r\n            \r\n            await setexceldata(response?.data?.orders);\r\n            setData(response.data);\r\n            setHasMore(true); \r\n           }\r\n          setLoading(false);\r\n        } catch (error) {\r\n          setError(error);\r\n          setLoading(false);\r\n        }\r\n      };\r\n      const range = (start, end, step = 1) => {\r\n        const result = [];\r\n        for (let i = start; i < end; i += step) {\r\n          result.push(i);\r\n        }\r\n        return result;\r\n      };\r\n      \r\n      \r\n      const totalPages = Math.ceil(totalOrder / 10);\r\n      const containerRef = useRef(null);\r\n      const [scrollPosition, setScrollPosition] = useState(0);\r\n      const pageWidth = 50; \r\n      const scrollLeft = () => {\r\n        if (containerRef.current) {\r\n          const newPosition = scrollPosition - pageWidth;\r\n          setScrollPosition(newPosition);\r\n          containerRef.current.scrollTo({ left: newPosition, behavior: \"smooth\" });\r\n        }\r\n      };\r\n      \r\n      const scrollRight = () => {\r\n        if (containerRef.current) {\r\n          const newPosition = scrollPosition + pageWidth;\r\n          setScrollPosition(newPosition);\r\n          containerRef.current.scrollTo({ left: newPosition, behavior: \"smooth\" });\r\n        }\r\n      };\r\n      \r\n    return(\r\n        <>\r\n        <div className=\" \">\r\n        \r\n         <div className=\"  mt-3 w-[1300px] h-[510px]\">\r\n            <div className=\"bg-[#464646] flex sticky top-3 z-20  text-white mb-2  px-2 items-center lg: \">\r\n                 <div className=\"  w-[100px]  px-3 py-1 \">Bill No</div>\r\n                <div className=\"border-l-[1px] border-white w-[120px]  px-3 py-1 \">Bill Date</div>\r\n                <div className=\"border-l-[1px] border-white w-[110px]  px-3 py-1 \">Order Id</div>\r\n                <div className=\"border-l-[1px] border-white w-[100px]  px-3 py-1 \">Product</div>\r\n                <div className=\"border-l-[1px] border-white w-[100px]  px-3 py-1 \">Quntity</div>\r\n                <div className=\"border-l-[1px] border-white w-[100px]  px-3 py-1 \">Amount</div>\r\n                <div className=\"border-l-[1px] border-white w-[100px]  px-3 py-1 \">State</div>\r\n                <div className=\"border-l-[1px] border-white w-[100px]  px-3 py-1 \">Platform</div>\r\n                <div className=\"border-l-[1px] border-white w-[150px]  px-3 py-1 \">Courier</div>\r\n                <div className=\"border-l-[1px] border-white w-[140px]  px-3 py-1 \">Tracking ID</div>\r\n                <div className=\"border-l-[1px] border-white w-[120px]  px-3 py-1 \">LR NO.</div>\r\n\r\n            </div>\r\n            {data?.orders?.map((person) => {\r\n \r\n const bdate = new Date(person.Billdate);\r\n const boptions = { year: 'numeric', month: '2-digit', day: '2-digit', };\r\nlet Billdate = bdate.toLocaleDateString('en-IN', boptions);\r\nBilldate = Billdate.split('/').join('-');\r\n return (\r\n            <div  key={person._id} className=\"bg-[#f2f2f2] flex   text-black   px-2 items-center \">\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.Billno}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[120px] overflow-x-auto px-3 py-1 \">{Billdate}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[110px] overflow-x-auto px-3 py-1 \">{person.OrderId}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.Product}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.Quntity}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.Salesamount}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.State}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[100px] overflow-x-auto px-3 py-1 \">{person.Platform.name}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[150px] overflow-x-auto px-3 py-1 \">{person.courier}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[140px] overflow-x-auto px-3 py-1 \">{person.trackingnumber}</Link>\r\n                <Link to=\"/home/Searchpage\" onClick={() => setsingleorderid(person._id)} className=\" w-[120px] overflow-x-auto px-3 py-1 \">{person.Lrno}</Link>\r\n                { openItemId === person._id &&<div className=\" sticky right-0 flex gap-2     z-10\">\r\n          <div className=\" top-[-19px]  absolute right-28  bg-white  border-black border-[1px] p-2  \">\r\n      \r\n\r\n\r\n<div className=\"opstion  \">\r\n      \r\n        <option className={`text-[12px] cursor-pointer ${selectedStatus==\"neworder\"&&'bg-blue-400'}`} onClick={()=>{changestatus(\"neworder\",person._id)}} value=\"neworder\">neworder</option>\r\n          \r\n    \r\n    </div>\r\n    <div className=\"flex justify-center mt-1\">\r\n     {selectedStatus !== \"Not Sent\" && <button className=\"text-[10px] bg-blue-600 rounded-full   items-center   text-white px-2  \" onClick={()=>{update(selectedStatus,id)}}>Update</button>}\r\n    </div> \r\n    </div>\r\n    </div>}\r\n    <div className=\" sticky right-0 flex gap-2  bottom-2 z-10\">\r\n\r\n<div  \r\n  className=\"bg-black rounded-full w-6 h-6 flex justify-center items-center  absolute bottom-3 right-16 text-white     text-[16px]  \"\r\n  onClick={() => toggleOpen(person._id)}\r\n >\r\n <MdOutlineSystemSecurityUpdate  />   \r\n</div>\r\n \r\n \r\n</div>\r\n            </div>)})}\r\n            \r\n        \r\n         </div>\r\n         <div className=\"     fixed md:w-[80%]  lg:w-[85%]   w-[90%]  bottom-[-20px] \">\r\n        <div className=\"text-white w-[100%] pb-5 flex gap-10 justify-center \">\r\n          {currentPage !== 1 ?<button   onClick={()=>{Previous()}} className=\"bg-blue-600 hover:bg-blue-700 w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\"><FaArrowAltCircleLeft /> Previous</div></button>:\r\n          <button disabled  onClick={()=>{Previous()}} className=\"bg-blue-400   w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\"><FaArrowAltCircleLeft /> Previous</div></button>}\r\n<div className=\"text-black border-black border-[1px] px-2 rounded-md\">{currentPage}</div>\r\n         { currentPage !== Math.ceil(totalOrder/10) ? <button onClick={()=>{Next()}} className=\"bg-blue-600 hover:bg-blue-700 w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\">Next<FaArrowAltCircleRight /></div> </button>:\r\n          <button disabled onClick={()=>{Next()}} className=\"bg-blue-400   w-[120px]  flex    justify-center cursor-pointer px-3 rounded-md \"> <div className=\"flex items-center gap-2\">Next<FaArrowAltCircleRight /></div> </button>}\r\n        </div>\r\n        <div className=\"w-[100%] pb-5 flex gap-10  justify-center \">\r\n        \r\n\r\n        <div className=\"flex items-center\">\r\n      {/* Scroll Left Button */}\r\n      <button\r\n        onClick={scrollLeft}\r\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 mb-2 py-1 rounded-md mr-2\"\r\n        disabled={scrollPosition <= 0}\r\n      >\r\n        &lt;\r\n      </button>\r\n\r\n      {/* Scroll Container */}\r\n      <div\r\n        ref={containerRef}\r\n        className=\"relative overflow-x-auto hide-scrollbar\"\r\n        style={{ maxWidth: \"150px\", whiteSpace: \"nowrap\" }}\r\n      >\r\n        <div className=\"flex gap-2\">\r\n          {range(1, totalPages+1).map(number => (\r\n            <div onClick={()=>{numclick(number)}}\r\n              key={number}\r\n              className=\"border-black text-center cursor-pointer border-[1px] px-2\"\r\n              style={{ width: pageWidth }}\r\n            >\r\n              {number}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Scroll Right Button */}\r\n      <button\r\n        onClick={scrollRight}\r\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 mb-2 rounded-md ml-2\"\r\n        disabled={scrollPosition >= (containerRef.current?.scrollWidth - containerRef.current?.clientWidth)}\r\n      >\r\n        &gt;\r\n      </button>\r\n    </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["Cancel","params","_data$orders","_containerRef$current","_containerRef$current2","setexceldata","setsingleorderid","userrole","useContext","DataContext","updateOrderStatus","loading","setLoading","useState","data","setData","error","setError","currentPage","setCurrentPage","totalOrder","settotalOrder","hasMore","setHasMore","useEffect","fetchproduct","productdata","setproductdata","refundCondition","billno","refunddate","billdate","LRNO","shippingcharges","Trackingid","Courier","Deliverybydate","Previous","prevPage","newPage","Next","Math","ceil","openItemId","setOpenItemId","selectedStatus","setSelectedStatus","id","setid","async","token","localStorage","getItem","response","axios","get","page","method","headers","_response$data","orders","length","totalPages","containerRef","useRef","scrollPosition","setScrollPosition","_jsx","_Fragment","children","_jsxs","className","map","person","Billdate","Date","toLocaleDateString","year","month","day","split","join","Link","to","onClick","_id","Billno","OrderId","Product","Quntity","Salesamount","State","Platform","name","courier","trackingnumber","Lrno","changestatus","status","iddata","value","update","prevId","toggleOpen","MdOutlineSystemSecurityUpdate","FaArrowAltCircleLeft","disabled","FaArrowAltCircleRight","scrollLeft","current","newPosition","scrollTo","left","behavior","ref","style","maxWidth","whiteSpace","start","end","step","arguments","undefined","result","i","push","range","number","numclick","width","scrollRight","scrollWidth","clientWidth"],"sourceRoot":""}